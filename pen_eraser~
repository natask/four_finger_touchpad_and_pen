#!/usr/bin/env python3
import subprocess
# Note your must "sudo gpasswd -a $USER input" then log out/in for
# permission to access the device.
#devstr = ' --device {}'.format(device.get('kernel')) if device else ''
#command = 'stdbuf -oL -- {}{}'.format(cmd_debug_events, devstr)
#cmd = subprocess.Popen(shlex.split(command), stdout=subprocess.PIPE, bufsize=1, universal_newlines=True)
cmd = subprocess.Popen(["stdbuf", "-oL", "--", "evtest","/dev/input/event22"], stdout=subprocess.PIPE, bufsize=1, universal_newlines=True)
# Sit in a loop forever reading the libinput messages ..
handler = None
count = 0
for line in cmd.stdout:
  # to gauge if it is a tap not a swipe. also outputs change in y
  # will change to radius based in the future
  if "(BTN_TOOL_RUBBER)," in line:
    val = line.rstrip()[-1]
    window_name = subprocess.getoutput("xdotool getwindowfocus getwindowname").lower()
    xournal = "xournal" in window_name; #"Xournal"
    stylus_labs = "stylus labs write" in window_name;#"Stylus Labs Write"
    if stylus_labs:
        if val == "1":
          subprocess.call(["xdotool","key","shift"])
    if xournal:
        if val == "1":
          subprocess.call(["xdotool","key","shift+ctrl+e"])
        if val == "0":
          subprocess.call(["xdotool", "key", "shift+ctrl+p"])

  #print(line) #can optimize here by scanning from the right until first legit char and bit hacks for the loop
  #print(count)
